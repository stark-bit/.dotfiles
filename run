#!/usr/bin/env bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

if [ -z "$DEV_ENV" ]; then
    echo "env var DEV_ENV needs to be present"
    exit 1
fi

export DEV_ENV="$DEV_ENV"

grep=""
dry_run="0"

while [[ $# -gt 0 ]]; do
    echo "ARG: \"$1\""
    if [[ "$1" == "--dry" ]]; then
        dry_run="1"
    else
        grep="$1"
    fi
    shift
done

log() {
    if [[ $dry_run == "1" ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

log "RUN: env: $env -- grep: $grep"

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$script_dir/detect_os_and_run"


mac() {
    runs_dir=$(find "$script_dir/runs/mac" -mindepth 1 -maxdepth 1 -type f -perm -111)
}

fedora() {
    echo "Detected Fedora-based system (dnf available)"
    runs_dir=$(find "$script_dir/runs/fedora" -mindepth 1 -maxdepth 1 -executable -type f)
}


debian() {
  echo "Detected Debian-based system (apt available)"
  runs_dir=$(find "$script_dir/runs/debian" -mindepth 1 -maxdepth 1 -executable -type f)
}


fallback() {
    echo "OS not supported. Exiting."
    exit 1
}

detect_os_and_run \
    --mac-func mac \
    --fedora-func fedora \
    --debian-func debian \
    --fallback-func fallback


for s in $runs_dir; do
    if echo "$s" | grep -vq "$grep"; then
        log "grep \"$grep\" filtered out $s"
        continue
    fi

    log "running script: $s"

    if [[ $dry_run == "0" ]]; then
        $s
    fi
done
